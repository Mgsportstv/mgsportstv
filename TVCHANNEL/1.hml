<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MG SPORTS TV - Secure Player</title>

    <!-- Clappr and necessary plugins -->
    <link rel="stylesheet" type="text/css" href="https://tv2.mgsportstv.com/Player/js/clap.css">
    <script type="text/javascript" src="https://cdn.jsdelivr.net/clappr/latest/clappr.js"></script>
    <script type="text/javascript" src="https://tv2.mgsportstv.com/Player/js/level.js"></script>
    <script src="https://tv2.mgsportstv.com/Player/js/dash-shaka-playback.js"></script>
    <script disable-devtool-auto src="https://cdn.jsdelivr.net/npm/disable-devtool@latest"></script>

    <style>
        body {
            margin: 0;
            padding: 0;
            background-color: #111;
        }

        #player {
            width: 100%;
            height: 100vh;
        }
    </style>
</head>

<body>
    <div id="player"></div>

    <script>
        // Fake API response (replace this with your real API endpoint)
        const fetchSensitiveData = async () => {
            return new Promise((resolve) => {
                setTimeout(() => {
                    resolve({
                        mpd_url: "https://ottb.live.cf.ww.aiv-cdn.net/lhr-nitro/live/clients/dash/enc/wf8usag51e/out/v1/bd3b0c314fff4bb1ab4693358f3cd2d3/cenc.mpd?",
                        drmKeyId: "ae26845bd33038a9c0774a0981007294",
                        drmKey: "63ac662dde310cfb4cc6f9b43b34196d"
                    });
                }, 500);
            });
        };

        // Initialize the player after fetching sensitive data
        fetchSensitiveData()
            .then((data) => {
                const dash_mpd_url = data.mpd_url;
                const drmKeyId = data.drmKeyId;
                const drmKey = data.drmKey;

                const drmKeys = {};
                drmKeys[drmKeyId] = drmKey;

                const drmConfig = {
                    clearKeys: drmKeys
                };

                const shakaConfig = {
                    drm: drmConfig
                };

                // Initialize Clappr Player
                const player = new Clappr.Player({
                    source: dash_mpd_url,
                    mimeType: 'application/dash+xml',
                    height: '100%',
                    width: '100%',
                    autoPlay: false,
                    plugins: [LevelSelector, DashShakaPlayback, Clappr.MediaControl],
                    mediacontrol: {
                        seekbar: "#886FFF",
                        buttons: "#C8A8D8"
                    },
                    chromecast: {
                        appId: "9DFB77C0",
                        contentType: "video/mp4"
                    },
                    shakaConfiguration: shakaConfig,
                    parentId: "#player"
                });
            })
            .catch((error) => {
                console.error('Error initializing the player:', error);
            });
    </script>
</body>

</html>
